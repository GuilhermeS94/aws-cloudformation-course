AWSTemplateFormatVersion: 2010-09-09
Description: Praticas de Output

Parameters:
  MinhaChave:
    Description: Selecione uma chave
    Type: AWS::EC2::KeyPair::KeyName
  Envs:
    Description: Selecione o ambiente
    Type: String
    Default: dev
    AllowedValues: 
      - dev
      - prod
    ConstraintDescription: deve ser desenvolvimento ou producao

Mappings:     
  MeuMapaRegiao:
    us-east-1:
      HVM64: ami-0022f774911c1d690
    us-west-1:
      HVM64: ami-02541b8af977f6cdd
  MeuMapaAmbiente:
    dev:
      instanceType: t2.micro
    prod:
      instanceType: t2.small   

Conditions:
  CriarGrupoSeguroDev: !Equals [!Ref Envs, dev]

Resources:
  MyVMInstance:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: !FindInMap
        - MeuMapaRegiao
        - !Ref 'AWS::Region'
        - HVM64
      InstanceType: !FindInMap
        - MeuMapaAmbiente
        - !Ref Envs
        - instanceType
      KeyName: !Ref MinhaChave
      SecurityGroups: !If [CriarGrupoSeguroDev, [!Ref MeuGrupoDeSegurancaDev], !Ref "AWS::NoValue"]

  MeuGrupoDeSegurancaDev:
    Type: AWS::EC2::SecurityGroup
    Condition: CriarGrupoSeguroDev
    Properties:
      GroupDescription: Meu grupo de seguranca Desenvolvimento
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '22'
          ToPort: '22'
          CidrIp: 0.0.0.0/0

Outputs:
  MinhaInstanciaID:
    Description: ID da minha instancia
    Value: !Ref MyVMInstance
  MeuDNS:
    Description: Nome do meu MeuDNS
    Value: !GetAtt MyVMInstance.PublicDnsName
  MinhaZona:
    Description: Zona de disponibilidade
    Value: !GetAtt MyVMInstance.AvailabilityZone
    Export:
      Name: !Sub "${AWS::StackName}-ZonaDaInstancia"
  MeuGrupoDeSeguranca:
    Description: Meu grupo se seguranca
    Value: !Ref MeuGrupoDeSegurancaDev
    Condition: CriarGrupoSeguroDev
    Export:
      Name: !Join [":", [!Ref "AWS::StackName", MeuSSHGrupoSeguro]]